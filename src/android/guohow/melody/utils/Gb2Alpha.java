package android.guohow.melody.utils;

public class Gb2Alpha {// 根据拼音传出首字母

	// 字母Z使用了两个标签，这里有２７个值
	// i, u, v都不做声母, 跟随前面的字母
	private final char[] chartable = { '啊', '芭', '擦', '搭', '蛾', '发', '噶', '哈',
			'哈', '击', '喀', '垃', '妈', '拿', '哦', '啪', '期', '然', '撒', '塌', '塌',
			'塌', '挖', '昔', '压', '匝', '座' };

	private final char[] alphatable = { 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',
			'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U',
			'V', 'W', 'X', 'Y', 'Z' };

	private final int[] table = new int[27];
	// 初始化
	{
		for (int i = 0; i < 27; ++i) {
			table[i] = gbValue(chartable[i]);
		}
	}

	public Gb2Alpha() {
	}

	// 主函数,输入字符,得到他的声母,
	// 英文字母返回对应的大写字母
	// 其他非简体汉字返回 '0'

	public char Char2Alpha(char ch) {

		if (ch >= 'a' && ch <= 'z') {
			return (char) (ch - 'a' + 'A');
		}
		if (ch >= 'A' && ch <= 'Z') {
			return ch;
		}
		final int gb = gbValue(ch);
		if (gb < table[0]) {
			return '0';
		}
		int i;
		for (i = 0; i < 26; ++i) {
			if (match(i, gb)) {
				break;
			}
		}
		if (i >= 26) {
			return '0';
		} else {
			return alphatable[i];
		}
	}

	// 根据一个包含汉字的字符串返回一个汉字拼音首字母的字符串
	public String String2Alpha(String SourceStr) {

		String Result = "";
		final int StrLength = SourceStr.length();
		int i;
		try {
			for (i = 0; i < StrLength; i++) {
				Result += Char2Alpha(SourceStr.charAt(i));
			}
		} catch (final Exception e) {
			Result = "#";// 有异常传人#
		}

		return Result.substring(0, 1);
	}

	private boolean match(int i, int gb) {

		if (gb < table[i]) {
			return false;
		}
		int j = i + 1;

		// 字母Z使用了两个标签
		while (j < 26 && (table[j] == table[i])) {
			++j;
		}
		if (j == 26) {
			return gb <= table[j];
		} else {
			return gb < table[j];
		}
	}

	// 取出汉字的编码
	private int gbValue(char ch) {

		String str = new String();
		str += ch;
		try {
			final byte[] bytes = str.getBytes("GB2312");
			if (bytes.length < 2) {
				return 0;
			}
			return (bytes[0] << 8 & 0xff00) + (bytes[1] & 0xff);
		} catch (final Exception e) {
			return 0;
		}
	}
}
